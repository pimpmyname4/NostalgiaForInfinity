name: Backtests

on:
  push:
  workflow_dispatch:

jobs:
  Backtest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        EXCHANGE: [kucoin]
        TRADING_MODE: [spot]
        TIMERANGE:
          - 20240201-20240301
          - 20240101-20240201

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Fetch data for backtests
        env:
          EXCHANGE: ${{ matrix.EXCHANGE }}
          TRADING_MODE: ${{ matrix.TRADING_MODE }}
          TIMEFRAME: 5m
          TIMERANGE: ${{ matrix.TIMERANGE }}
          HELPER_TIME_FRAMES: 5m 15m 1h 4h 8h 1d
        run: |
          .github/workflows/scripts/download-necessary-exchange-market-data-for-backtests.sh

      - name: Inject proxy config
        if: ${{ matrix.EXCHANGE == 'binance' }}
        env:
          PROXY: ${{ secrets.FREQTRADE_PROXY }}
        run: |
          for file in configs/proxy-binance.json; do
            jq --arg proxy "$PROXY" \
            '.exchange.ccxt_config = {
              http_proxy: $proxy
            }' "$file" > tmp.json && mv tmp.json "$file"
          done

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.custom
          tags: ci-strategy-backtesting
          push: false
          load: true
          cache-from: type=gha,scope=ci-strategy-backtesting
          cache-to: type=gha,mode=max,scope=ci-strategy-backtesting

      - name: Run Backtests
        run: |
          mkdir -p artifacts
          chmod 777 artifacts
          export COLUMNS=240
          docker run -v "$PWD:/testing" \
            -v "$PWD/user_data/data:/testing/user_data/data" \
            --rm \
            -w /testing \
            --entrypoint "" \
            --env-file .github/workflows/scripts/ci-proxy.env \
            ci-strategy-backtesting \
            python -m pytest -ra -vv -s --log-cli-level=info \
            --artifacts-path=artifacts/ \
            -p no:cacheprovider tests/backtests \
            -k '${{ matrix.EXCHANGE }} and ${{ matrix.TRADING_MODE }} and ${{ matrix.TIMERANGE }}'
      
      - name: Show Backtest Output
        run: cat artifacts/backtest-output-${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-${{ matrix.TIMERANGE }}.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-testrun-artifacts-${{ matrix.TIMERANGE }}
          path: artifacts/

  Merge-Artifacts:
    if: always()
    needs: Backtest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        EXCHANGE: [kucoin]
        TRADING_MODE: [spot]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-testrun-artifacts
          pattern: ${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-testrun-artifacts-*

  Comment-CI-Results:
    if: always()
    needs: Merge-Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install -r tests/ci-requirements.txt

      - name: Download Previous Kucoin CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=backtests.yml \
            --exchange=kucoin \
            --tradingmode=spot \
            --artifact=kucoin-spot-testrun-artifacts downloaded-results

      - name: Download Previous Binance Spot CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=backtests.yml \
            --exchange=binance \
            --tradingmode=spot \
            --artifact=binance-spot-testrun-artifacts downloaded-results

      - name: Download Previous Binance Futures CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=backtests.yml \
            --exchange=binance \
            --tradingmode=futures \
            --artifact=binance-futures-testrun-artifacts downloaded-results

      - name: Download Current Binance Futures CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binance-futures-testrun-artifacts
          path: downloaded-results/current

      - name: Download Current Binance Spot CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binance-spot-testrun-artifacts
          path: downloaded-results/current

      - name: Download Current Kucoin CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: kucoin-spot-testrun-artifacts
          path: downloaded-results/current

      - name: Flatten downloaded artifacts
        run: |
          find downloaded-results/current -type f -name 'backtest-output-*.txt' -exec mv {} downloaded-results/current/ \;

      - name: Pre Format Backtest Results
        run: |
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/└.*┘//g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┏.*┓//g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┡/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┃/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/╇/:|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/━/-/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/│/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┩/:|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/BACKTESTING REPORT/\n## BACKTESTING REPORT\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/LEFT OPEN TRADES REPORT/\n## LEFT OPEN TRADES REPORT\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/ENTER TAG STATS/\n## ENTER TAG STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/EXIT REASON STATS/\n## EXIT REASON STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/MIXED TAG STATS/\n## MIXED TAG STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/DAY BREAKDOWN/\n## DAY BREAKDOWN\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/SUMMARY METRICS/\n## SUMMARY METRICS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/STRATEGY SUMMARY/\n## STRATEGY SUMMARY\n/g' {} +

      - name: Comment CI Results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXCLUDED_TIMERANGES: 20240101-20240301,20240301-20240501,20240501-20240701,20240701-20240901,20240901-20241101,20241101-20241231,20250101-20250301,20250301-20250501
        run: |
          python .github/workflows/scripts/comment-ci-results.py \
            --repo=${{ github.event.repository.full_name }} downloaded-results
